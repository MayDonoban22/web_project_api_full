{"ast":null,"code":"var _jsxFileName = \"/Users/mayespitia/Tripleten career/web_project_api_full/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport { Routes, Route, useNavigate, useLocation } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport { useEffect } from \"react\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Header from \"./Header/Header\";\nimport Main from \"./Main/Main\";\nimport Footer from \"./Footer/Footer\";\nimport { useState } from \"react\";\nimport { api } from \"../utils/Api\";\nimport * as auth from \"../utils/auth\";\nimport { setToken, getToken, removeToken } from \"../utils/token\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport { getUserEmail } from \"../utils/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isDeleteTrashOpen, setIsDeleteTrashOpen] = useState(false);\n  const [userName, setuserName] = useState(\"\");\n  const [userDescription, setUserDescription] = useState(\"\");\n  const [userAvatar, setUserAvatar] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [currentCard, setCurrentCard] = useState(\"\");\n  const [userData, setUserData] = useState({\n    email: \"\"\n  });\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [isRegistrationSuccess, setIsRegistrationSuccess] = useState(false);\n  const [jwt, setJwt] = useState(getToken());\n  const navigate = useNavigate();\n  const location = useLocation();\n  const handleRegistration = ({\n    email,\n    password\n  }) => {\n    if (password) {\n      auth.register(password, email).then(() => {\n        navigate(\"/login\");\n        setIsRegistrationSuccess(true);\n        setIsInfoTooltipOpen(true);\n      }).catch(() => {\n        setIsRegistrationSuccess(false);\n        setIsInfoTooltipOpen(true);\n      });\n    }\n  };\n  const fetchUserData = (token, shouldRedirect = false) => {\n    return Promise.all([api.getUsers(token), getUserEmail(token), api.getCards()]).then(([userData, userEmailData, cardsData]) => {\n      setIsLoggedIn(true);\n      setCurrentUser(userData);\n      setUserData({\n        email: userData.email\n      });\n      setuserName(userData.name);\n      setUserDescription(userData.about);\n      setUserAvatar(userData.avatar);\n      setCards(cardsData);\n      if (shouldRedirect) {\n        var _location$state, _location$state$from;\n        const redirectPath = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || \"/\";\n        navigate(redirectPath);\n      }\n    }).catch(error => {\n      console.error(\"Error al obtener datos:\", error);\n    });\n  };\n  useEffect(() => {\n    const localToken = getToken();\n    if (!localToken) return;\n    fetchUserData(localToken, true);\n  }, [jwt]);\n  const handleLogin = ({\n    email,\n    password\n  }) => {\n    if (!email || !password) return;\n    auth.authorize(password, email).then(data => {\n      if (data.token) {\n        setToken(data.token);\n        setJwt(data.token);\n        fetchUserData(data.token, true);\n      }\n    }).catch(() => {\n      setIsRegistrationSuccess(false);\n      setIsInfoTooltipOpen(true);\n    });\n  };\n  const onLogout = () => {\n    var _location$state2, _location$state2$from;\n    setIsLoggedIn(false);\n    setToken(null);\n    setJwt(null);\n    setCurrentUser(null);\n    setUserData({\n      email: \"\"\n    });\n    setuserName(\"\");\n    setUserDescription(\"\");\n    setUserAvatar(\"\");\n    setCards(null);\n    removeToken();\n    const redirectPath = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : (_location$state2$from = _location$state2.from) === null || _location$state2$from === void 0 ? void 0 : _location$state2$from.pathname) || \"/login\";\n    navigate(redirectPath);\n  };\n  async function handleCardLike(card) {\n    const isLiked = card.likes && card.likes.some(id => id === currentUser._id);\n    await api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(currentCard => currentCard._id === card._id ? newCard.card : currentCard));\n    }).catch(error => console.error(error));\n  }\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => {\n        return state.filter(currentCard => currentCard._id !== card._id);\n      });\n    }).catch(error => {\n      console.error(\"Error al eliminar la tarjeta:\", error);\n    });\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  function handleCreateCard(card) {\n    api.createCard(card).then(newCard => {\n      setCards(state => [newCard, ...state]);\n      closeAllPopups();\n    });\n  }\n  const handleUpdateUser = (name, about) => {\n    (async () => {\n      await api.editUser(name, about).then(newData => {\n        setCurrentUser(newData);\n        closeAllPopups();\n      });\n    })();\n  };\n  const handleUpdateAvatar = data => {\n    (async () => {\n      await api.editAvatar(data).then(newData => {\n        setUserAvatar(newData);\n        setCurrentUser({\n          ...currentUser,\n          avatar: newData.avatar\n        });\n        closeAllPopups();\n      });\n    })();\n  };\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleDeleteTrashClick(card) {\n    setIsDeleteTrashOpen(true);\n    setCurrentCard(card);\n  }\n  function handleEditAvatar(data) {\n    handleUpdateAvatar(data);\n    setIsEditAvatarPopupOpen(false);\n  }\n  function handleEditProfile(data) {\n    handleUpdateUser(data.name, data.about);\n    setIsEditProfilePopupOpen(false);\n  }\n  function handleDeleteTrash() {\n    setIsDeleteTrashOpen(false);\n    handleCardDelete(currentCard);\n  }\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeleteTrashOpen(false);\n    setSelectedCard(false);\n    setIsInfoTooltipOpen(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: {\n        currentUser,\n        handleUpdateUser,\n        handleUpdateAvatar,\n        isLoggedIn\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        userEmail: userData === null || userData === void 0 ? void 0 : userData.email,\n        onLogout: onLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loginContainer\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"registerContainer\",\n            children: /*#__PURE__*/_jsxDEV(Register, {\n              handleRegistration: handleRegistration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            children: /*#__PURE__*/_jsxDEV(Main, {\n              userData: userData,\n              onEditAvatarclick: handleEditAvatarClick,\n              onEditProfileclick: handleEditProfileClick,\n              onEditAddPlaceclick: handleAddPlaceClick,\n              onEditDeleteTrashclick: handleDeleteTrashClick,\n              profileName: userName,\n              profileAbout: userDescription,\n              profileAvatar: userAvatar,\n              cards: cards,\n              onCardClick: handleCardClick,\n              onHandleCardLike: handleCardLike,\n              onHandleCardDelete: handleCardDelete,\n              selectedCard: selectedCard,\n              closeAllPopups: closeAllPopups,\n              handleEditAvatar: handleEditAvatar,\n              isEditAvatarPopupOpen: isEditAvatarPopupOpen,\n              handleEditProfile: handleEditProfile,\n              isEditProfilePopupOpen: isEditProfilePopupOpen,\n              handleCreateCard: handleCreateCard,\n              isAddPlacePopupOpen: isAddPlacePopupOpen,\n              handleDeleteTrash: handleDeleteTrash,\n              isDeleteTrashOpen: isDeleteTrashOpen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoTooltipOpen,\n        onClose: closeAllPopups,\n        isSuccess: isRegistrationSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZSDNJ8phwrxejjFfY/j/o6iZ9/0=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","useNavigate","useLocation","Login","Register","InfoTooltip","useEffect","ProtectedRoute","Header","Main","Footer","useState","api","auth","setToken","getToken","removeToken","CurrentUserContext","getUserEmail","jsxDEV","_jsxDEV","App","_s","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isDeleteTrashOpen","setIsDeleteTrashOpen","userName","setuserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","selectedCard","setSelectedCard","currentUser","setCurrentUser","currentCard","setCurrentCard","userData","setUserData","email","isLoggedIn","setIsLoggedIn","isInfoTooltipOpen","setIsInfoTooltipOpen","isRegistrationSuccess","setIsRegistrationSuccess","jwt","setJwt","navigate","location","handleRegistration","password","register","then","catch","fetchUserData","token","shouldRedirect","Promise","all","getUsers","getCards","userEmailData","cardsData","name","about","avatar","_location$state","_location$state$from","redirectPath","state","from","pathname","error","console","localToken","handleLogin","authorize","data","onLogout","_location$state2","_location$state2$from","handleCardLike","card","isLiked","likes","some","id","_id","changeLikeCardStatus","newCard","map","handleCardDelete","deleteCard","filter","handleCardClick","handleCreateCard","createCard","closeAllPopups","handleUpdateUser","editUser","newData","handleUpdateAvatar","editAvatar","handleEditProfileClick","handleEditAvatarClick","handleAddPlaceClick","handleDeleteTrashClick","handleEditAvatar","handleEditProfile","handleDeleteTrash","className","children","Provider","value","userEmail","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onEditAvatarclick","onEditProfileclick","onEditAddPlaceclick","onEditDeleteTrashclick","profileName","profileAbout","profileAvatar","onCardClick","onHandleCardLike","onHandleCardDelete","isOpen","onClose","isSuccess","_c","$RefreshReg$"],"sources":["/Users/mayespitia/Tripleten career/web_project_api_full/src/components/App.jsx"],"sourcesContent":["import { Routes, Route, useNavigate, useLocation } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport { useEffect } from \"react\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Header from \"./Header/Header\";\nimport Main from \"./Main/Main\";\nimport Footer from \"./Footer/Footer\";\nimport { useState } from \"react\";\nimport { api } from \"../utils/Api\";\nimport * as auth from \"../utils/auth\";\nimport { setToken, getToken, removeToken } from \"../utils/token\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport { getUserEmail } from \"../utils/auth\";\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isDeleteTrashOpen, setIsDeleteTrashOpen] = useState(false);\n  const [userName, setuserName] = useState(\"\");\n  const [userDescription, setUserDescription] = useState(\"\");\n  const [userAvatar, setUserAvatar] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [currentCard, setCurrentCard] = useState(\"\");\n  const [userData, setUserData] = useState({ email: \"\" });\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [isRegistrationSuccess, setIsRegistrationSuccess] = useState(false);\n  const [jwt, setJwt] = useState(getToken());\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleRegistration = ({ email, password }) => {\n    if (password) {\n      auth\n        .register(password, email)\n        .then(() => {\n          navigate(\"/login\");\n          setIsRegistrationSuccess(true);\n          setIsInfoTooltipOpen(true);\n        })\n        .catch(() => {\n          setIsRegistrationSuccess(false);\n          setIsInfoTooltipOpen(true);\n        });\n    }\n  };\n  const fetchUserData = (token, shouldRedirect = false) => {\n    return Promise.all([\n      api.getUsers(token),\n      getUserEmail(token),\n      api.getCards(),\n    ])\n      .then(([userData, userEmailData, cardsData]) => {\n        setIsLoggedIn(true);\n        setCurrentUser(userData);\n        setUserData({ email: userData.email });\n        setuserName(userData.name);\n        setUserDescription(userData.about);\n        setUserAvatar(userData.avatar);\n        setCards(cardsData);\n\n        if (shouldRedirect) {\n          const redirectPath = location.state?.from?.pathname || \"/\";\n          navigate(redirectPath);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error al obtener datos:\", error);\n      });\n  };\n\n  useEffect(() => {\n    const localToken = getToken();\n    if (!localToken) return;\n\n    fetchUserData(localToken, true);\n  }, [jwt]);\n\n  const handleLogin = ({ email, password }) => {\n    if (!email || !password) return;\n\n    auth\n      .authorize(password, email)\n      .then((data) => {\n        if (data.token) {\n          setToken(data.token);\n          setJwt(data.token);\n          fetchUserData(data.token, true);\n        }\n      })\n      .catch(() => {\n        setIsRegistrationSuccess(false);\n        setIsInfoTooltipOpen(true);\n      });\n  };\n\n  const onLogout = () => {\n    setIsLoggedIn(false);\n\n    setToken(null);\n    setJwt(null);\n    setCurrentUser(null);\n    setUserData({ email: \"\" });\n    setuserName(\"\");\n    setUserDescription(\"\");\n    setUserAvatar(\"\");\n    setCards(null);\n    removeToken();\n    const redirectPath = location.state?.from?.pathname || \"/login\";\n    navigate(redirectPath);\n  };\n\n  async function handleCardLike(card) {\n    const isLiked =\n      card.likes && card.likes.some((id) => id === currentUser._id);\n\n    await api\n      .changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((currentCard) =>\n            currentCard._id === card._id ? newCard.card : currentCard\n          )\n        );\n      })\n      .catch((error) => console.error(error));\n  }\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) => {\n          return state.filter((currentCard) => currentCard._id !== card._id);\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error al eliminar la tarjeta:\", error);\n      });\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleCreateCard(card) {\n    api.createCard(card).then((newCard) => {\n      setCards((state) => [newCard, ...state]);\n      closeAllPopups();\n    });\n  }\n\n  const handleUpdateUser = (name, about) => {\n    (async () => {\n      await api.editUser(name, about).then((newData) => {\n        setCurrentUser(newData);\n        closeAllPopups();\n      });\n    })();\n  };\n  const handleUpdateAvatar = (data) => {\n    (async () => {\n      await api.editAvatar(data).then((newData) => {\n        setUserAvatar(newData);\n        setCurrentUser({ ...currentUser, avatar: newData.avatar });\n        closeAllPopups();\n      });\n    })();\n  };\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleDeleteTrashClick(card) {\n    setIsDeleteTrashOpen(true);\n    setCurrentCard(card);\n  }\n\n  function handleEditAvatar(data) {\n    handleUpdateAvatar(data);\n    setIsEditAvatarPopupOpen(false);\n  }\n\n  function handleEditProfile(data) {\n    handleUpdateUser(data.name, data.about);\n    setIsEditProfilePopupOpen(false);\n  }\n\n  function handleDeleteTrash() {\n    setIsDeleteTrashOpen(false);\n    handleCardDelete(currentCard);\n  }\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeleteTrashOpen(false);\n    setSelectedCard(false);\n    setIsInfoTooltipOpen(false);\n  }\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider\n        value={{\n          currentUser,\n          handleUpdateUser,\n          handleUpdateAvatar,\n          isLoggedIn,\n        }}\n      >\n        <Header userEmail={userData?.email} onLogout={onLogout} />\n        <Routes>\n          <Route\n            path=\"/login\"\n            element={\n              <div className=\"loginContainer\">\n                <Login handleLogin={handleLogin} />\n              </div>\n            }\n          />\n          <Route\n            path=\"/register\"\n            element={\n              <div className=\"registerContainer\">\n                <Register handleRegistration={handleRegistration} />\n              </div>\n            }\n          />\n\n          <Route\n            path=\"/\"\n            element={\n              <ProtectedRoute>\n                <Main\n                  userData={userData}\n                  onEditAvatarclick={handleEditAvatarClick}\n                  onEditProfileclick={handleEditProfileClick}\n                  onEditAddPlaceclick={handleAddPlaceClick}\n                  onEditDeleteTrashclick={handleDeleteTrashClick}\n                  profileName={userName}\n                  profileAbout={userDescription}\n                  profileAvatar={userAvatar}\n                  cards={cards}\n                  onCardClick={handleCardClick}\n                  onHandleCardLike={handleCardLike}\n                  onHandleCardDelete={handleCardDelete}\n                  selectedCard={selectedCard}\n                  closeAllPopups={closeAllPopups}\n                  handleEditAvatar={handleEditAvatar}\n                  isEditAvatarPopupOpen={isEditAvatarPopupOpen}\n                  handleEditProfile={handleEditProfile}\n                  isEditProfilePopupOpen={isEditProfilePopupOpen}\n                  handleCreateCard={handleCreateCard}\n                  isAddPlacePopupOpen={isAddPlacePopupOpen}\n                  handleDeleteTrash={handleDeleteTrash}\n                  isDeleteTrashOpen={isDeleteTrashOpen}\n                />\n              </ProtectedRoute>\n            }\n          />\n        </Routes>\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          onClose={closeAllPopups}\n          isSuccess={isRegistrationSuccess}\n        />\n        <Footer />\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}