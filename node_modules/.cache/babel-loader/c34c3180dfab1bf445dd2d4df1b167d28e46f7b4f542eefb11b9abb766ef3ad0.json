{"ast":null,"code":"export const BASE_URL = \"https://webprojectapifull-production.up.railway.app\";\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    return res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n  });\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    return res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n  });\n};\nexport const getUserEmail = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  }).then(res => {\n    return res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n  });\n};","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","headers","Accept","body","JSON","stringify","then","res","ok","json","Promise","reject","status","authorize","getUserEmail","token","Authorization"],"sources":["/Users/mayespitia/Tripleten career/web_project_api_full/src/utils/auth.jsx"],"sourcesContent":["export const BASE_URL = \"https://webprojectapifull-production.up.railway.app\";\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ password, email }),\n  }).then((res) => {\n    return res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n  });\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ password, email }),\n  }).then((res) => {\n    return res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n  });\n};\nexport const getUserEmail = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: token,\n    },\n  }).then((res) => {\n    return res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n  });\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,qDAAqD;AAE7E,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAC,GAAGJ,QAAQ,SAAS,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC,CAACQ,IAAI,CAAEC,GAAG,IAAK;IACf,OAAOA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACC,MAAM,CAAC,UAAUJ,GAAG,CAACK,MAAM,EAAE,CAAC;EACrE,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMC,SAAS,GAAGA,CAAChB,QAAQ,EAAEC,KAAK,KAAK;EAC5C,OAAOC,KAAK,CAAC,GAAGJ,QAAQ,SAAS,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC;IAAM,CAAC;EAC1C,CAAC,CAAC,CAACQ,IAAI,CAAEC,GAAG,IAAK;IACf,OAAOA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACC,MAAM,CAAC,UAAUJ,GAAG,CAACK,MAAM,EAAE,CAAC;EACrE,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAME,YAAY,GAAIC,KAAK,IAAK;EACrC,OAAOhB,KAAK,CAAC,GAAGJ,QAAQ,WAAW,EAAE;IACnCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE,kBAAkB;MAClCc,aAAa,EAAED;IACjB;EACF,CAAC,CAAC,CAACT,IAAI,CAAEC,GAAG,IAAK;IACf,OAAOA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACC,MAAM,CAAC,UAAUJ,GAAG,CAACK,MAAM,EAAE,CAAC;EACrE,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}